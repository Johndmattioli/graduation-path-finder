@model GPF.ViewModels.AccountEditViewModel

@{
    ViewBag.Title = "Edit Account";
}

<div class="page-header">
    <h1>@Model.Account.FirstName @Model.Account.LastName, @Model.Account.Role.Description</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Edit @Model.Account.Role.Description Account</h3>
        </div>
        <div class="panel-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Account.Id)

            <div class="form-group">
                <div><strong>ID:</strong> @Model.Account.Id</div>
                <div><strong>Username:</strong> @Model.Account.Username</div>
            </div>

            <div class="form-group">
                <label>First Name</label>
                @Html.EditorFor(model => model.Account.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name"} })
                @Html.ValidationMessageFor(model => model.Account.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Last Name</label>
                @Html.EditorFor(model => model.Account.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.Account.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>Degree</label>
                <select id="Degree" class="form-control" onchange="FillConcentrationList()">
                    @foreach (var degree in Model.AvailableDegrees)
                    {
                        <option value="@degree.Id" @(Model.Account.Degree.Id == degree.Id ? "selected" : "")>@degree.Title</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label>Concentration</label>
                <select id="Concentration" class="form-control">
                    @if (Model.Account.Degree != null)
                    {
                        foreach (var concentration in Model.AvailableDegrees.Find(x => x.Id == Model.Account.Degree.Id).Concentrations)
                        {
                            <option value="@concentration.Id" @(Model.Account.Concentration.Id == concentration.Id ? "selected" : "")>@concentration.Title</option>
                        }
                    }
                </select>
            </div>

            <div class="well">
                <div class="form-group">
                    <label>Street</label>
                    @Html.EditorFor(model => model.Account.Street, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street" } })
                    @Html.ValidationMessageFor(model => model.Account.Street, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>City</label>
                    @Html.EditorFor(model => model.Account.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                    @Html.ValidationMessageFor(model => model.Account.City, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>State</label>
                    @Html.EditorFor(model => model.Account.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })
                    @Html.ValidationMessageFor(model => model.Account.State, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label>Zip</label>
                    @Html.EditorFor(model => model.Account.Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zip" } })
                    @Html.ValidationMessageFor(model => model.Account.Zip, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" value="Save" class="btn btn-default" />

        </div>
    </div>
}

<script>
    function FillConcentrationList() {
    var degreeId = $('#Degree').val();
    $.ajax({
        url: '/Account/FillConcentrationList',
        type: "GET",
        dataType: "JSON",
        data: { id: degreeId },
        success: function (concentrations) {
            $("#Concentration").html(""); // clear before appending new list
            $.each(concentrations, function (i, concentration) {
                $("#Concentration").append(
                    $('<option></option>').val(concentration.Id).html(concentration.Title));
            });
        }
    });
  }
</script>